package ${package}.${moduleName}.entity;

import com.baomidou.mybatisplus.annotations.TableName;

import org.apache.commons.lang3.builder.ReflectionToStringBuilder;

import com.monitor.base.BaseEntity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

#if(${hasBigDecimal})
import java.math.BigDecimal;
#end

#if(${hasLocalDate})
import java.time.LocalDate;
#end

#if(${hasLocalDateTime})
import java.time.LocalDateTime;
#end


/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@ApiModel(description = "${comments}")
@TableName("${tableName}")
public class ${className}Entity extends BaseEntity<${className}Entity> {

	private static final long serialVersionUID = 1L;
#foreach ($column in $columns)
	#if ($column.attrname =='createTime' || $column.attrname=='updateTime' || $column.attrname=='remarks' || $column.attrname=='delFlag' || $column.attrname=='id')
    #else 
    
    /**
	 * $column.comments
	 */
	@ApiModelProperty(value = "$column.comments", name = "$column.attrname")
    private $column.attrType $column.attrname;
#end
#end
#foreach ($column in $columns)
    #if ($column.attrname=='createTime' || $column.attrname=='updateTime' || $column.attrname=='remarks' || $column.attrname=='delFlag' || $column.attrname=='id')
    #else
	

	public $column.attrType get${column.attrName}() {
		return $column.attrname;
	}

	public void set${column.attrName}($column.attrType $column.attrname) {
		this.$column.attrname = $column.attrname;
	}
	#end
#end

    @Override
	public String toString() {
	     return ReflectionToStringBuilder.toString(this);
	}
}
